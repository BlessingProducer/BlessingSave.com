---
import SEOTitle from "./SEOTitle.astro";
import SEOContent from "./SEOContent.astro";
import FAQItem from "./FAQItem.astro";

class FAQItemModel {
    id: string;
    question: string;
    answer: string
}

class Introduce {
    title: string;
    content: string;
}

interface Props {
    titleTextColor:string;
    contentTextColor:string;
    faqBgColor:string;
    faqTextColor:string;
    firstIntroduce: Introduce;
    secondIntroduce: Introduce;
    featuresTitle: String;
    featuresContents: String[];
    FAQTitle: String;
    FAQItems: FAQItemModel[]
}
const {
    titleTextColor,
    contentTextColor,
    faqBgColor,
    faqTextColor,
    firstIntroduce,
    secondIntroduce,
    featuresTitle,
    featuresContents,
    FAQTitle,
    FAQItems
} = Astro.props;
---
<main>
    <div class="mx-auto my-10 px-3 py-5 lg:px-36">
        <SEOTitle content={firstIntroduce.title} textColor={titleTextColor}/>
        <SEOContent content={firstIntroduce.content} textColor={contentTextColor}/>

        <SEOTitle content={secondIntroduce.title} textColor={titleTextColor}/>
        <SEOContent content={secondIntroduce.content} textColor={contentTextColor}/>

        <SEOTitle content={featuresTitle} textColor={titleTextColor}/>
        {featuresContents && featuresContents.map((item: any) => (
                <SEOContent content={item} textColor={contentTextColor}/>
        ))}

        <SEOTitle content={FAQTitle} textColor={titleTextColor}/>
        <div id="accordion-flush"
             data-accordion="collapse"
             itemscope
             itemtype="https://schema.org/FAQPage">
            {FAQItems && FAQItems.map((item: FAQItemModel) => (
                    <FAQItem
                            id={item.id}
                            question={item.question}
                            answer={item.answer}
                            bgColor={faqBgColor}
                            textColor={faqTextColor}
                    />
            ))}
        </div>
    </div>
</main>
